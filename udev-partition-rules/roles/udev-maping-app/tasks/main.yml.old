

#
# - name: get scsi host - the last scsi host is used for shared disks
#   shell: lsscsi -H | tail -1 | sed -e 's/[^0-9]*\([0-9][0-9]*\).*/\1/'
#   register: scsi_host
#   when: not (tickur|bool)
#   tags:
#     - create_partitions
#     - map_disks
#     - debug_disklist
#
# - name: get the device and uuid seperated
#   shell: lsscsi -i | awk '$2 == "disk" && $1 ~ /(^\[[{{ scsi_host.stdout }}])/ {print $7","$8}'
#   register: disklist_output
#   when: not (tickur|bool)
#   tags:
#     - create_partitions
#     - map_disks
#     - debug_disklist
#

- name: setting the disklist
  set_fact:
    disklist: "{{ disklist_output.stdout_lines }}"
  tags:
    - create_partitions
    - map_disks
    - debug_disklist

- debug:
    msg: "{{ disklist.stdout_lines }}"
  tags: debug_disklist

# - name: "create partitions on the disks"
#   parted:
#     device: '"{{ item.split(",")[0] }}"'
#     number: 1
#     state: present
#   with_items: "{{ disklist }}"
#   run_once: true
#   when: not (tickur|bool)
#   tags: create_partition
#
# - name: "discover partitions in other node"
#   command: "partprobe"
#   when: ora_type == "RAC" and inventory_hostname != (ansible_play_hosts|sort())[0] and not (tickur|bool)
#   tags: 

# test to see it works

- name: test to see the when condition is good
  debug:
    msg: "the when condition not good."
  when: not tickur|bool




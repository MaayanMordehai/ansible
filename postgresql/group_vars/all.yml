# remote user to connect to - need to be sudoer
rmt_user: dba

# postgresql os user
pg_os_user: postgres

# full pg version to install 
pg_full_version: "{{ version }}"

# pg_major_version
pg_major_version: "{{ ((pg_full_version|string).split('.'))[0] }}"

# pg binaries location
pg_bin: "/usr/pgsql-{{ pg_major_version }}/bin"

# general pg directory
postgresql_dir: "/postgres"

# base pg dir for this version
base_dir: "{{ postgresql_dir }}/{{ pg_major_version }}"

# pg tablespaces directory
pg_tbs: "{{ base_dir }}/tbs"

# pg database main directory
pg_data: "{{ base_dir }}/data"

# pg replica recovering wals directory
pg_wals_from_pri: "{{ base_dir }}/wals_from_primary"

# pg directories to create
dirs_info:
  - path: "{{ postgresql_dir }}"
    mode: "0774"
    owner: "{{ pg_os_user }}" 
  - path: "{{ base_dir }}"
    mode: "0774"
    owner: "{{ pg_os_user }}"
  - path: "{{ pg_data }}"
    mode: "0700"
    owner: "{{ pg_os_user }}"
  - path: "{{ pg_tbs }}"
    mode: "0700"
    owner: "{{ pg_os_user }}"
  - path: "{{ pg_wals_from_pri }}"
    mode: "0700"
    owner: "{{ pg_os_user }}"

# pg service name
pg_srv_name: "postgresql-{{ pg_major_version }}.service"

# vg name for pg
fs_vg: vgpg

# lv name for pg 
fs_lv: pglv

# pg database
pg_db: "postgres"
# pg admin user
pg_admin_user: "postgres"

# vaultPass, postgres-pass
# create with:
# ansible-vault encrypt_string 'postgres-pass' --name admin_user_pass
# need to put postgres md5 hash instead 
admin_user_pass: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          37626166613634656636323330643631666431656662343564626165383165373633663863366537
          3334346563653866323133303232353362646331306430300a346663303631333965303865313737
          61353732613838616534633762383765346538323036333539376166646139643930383138633839
          6461353764363730390a366136663535616636643639643436333531383038616531396631316437
          3338

# postgres home directory
home_dir: "/var/lib/pgsql"

# true to add postgis extention
# false to not add postgis extention
postgis: yes

postgis_extention: 
  extention: "postgis"
  database: "{{ app_db_name }}"

pg_stat_statement_extention:
  extention: "pg_stat_statements"
  database: "{{ pg_db }}"
  restart_params:
    - name: "shared_preload_libraries"
      value: "pg_stat_statements"
  reload_params:
    - name: "pg_stat_statements.max"
      value: "1000"
    - name: "pg_stat_statements.track"
      value: "all"

extentions_info: "{{ [pg_stat_statement_extention] + \
                     (postgis|ternary([postgis_extention], [])) }}"

required_params:
  - "cluster_name"
  - "version"
  - "pg_type" # REPLICA / STANDALONE
  - "app_db_name" 
  - "app_user_name" 
  - "app_user_pass"

replica_required_params:
  - "master_host"

